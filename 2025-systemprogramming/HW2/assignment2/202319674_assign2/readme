양정욱 202319674 assignment2

I did this Homework alone.
(Optionally) An indication of how much time you spent doing the assignment. -> 10 hours
(Optionally) Your assessment of the assignment: Did it help you to learn? What did it help you to learn? Do you have any suggestions for improvement? Etc.
             -Dynamic Memory Management: Using malloc, realloc, and asprintf provided hands-on experience with memory allocation and error handling.
             -File System Interaction: Working with dirent, lstat, and file system metadata deepened my understanding of how file systems operate at a low level.
             -Error Handling: Implementing robust error handling for system calls like opendir, readdir, and lstat was a valuable exercise.
(Optionally) Any information that will help us to grade your work in the most favorable light. In particular you should describe all known bugs.
             -Errors such as file size overflow were ignored during implementation.

The main function in dirtree.c operates as follows:

1. Accepts target directories as input.
2. Prints the header.
3. Calls the processDir function.
4. Prints the tail.

Here, only the most important and complex function, processDir, is explained.

processDir recursively reads and prints the files within the target directory. Specifically, this function executes the following three steps:

1. Reads the entries of the given target directory.
2. Sorts the read entries.
3. Prints the sorted entries one by one. If a printed entry is a directory, processDir is called for that entry.

In step 1, since the number of entries in the target directory is unknown, the program initially assumes MAX_DIR entries. If the number exceeds this, the capacity is doubled dynamically to store more entries.

In step 2, sorting is performed using qsort.

In step 3, the output format is implemented by referring to the behavior of the reference file.